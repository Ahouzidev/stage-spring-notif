server:
  port: 8081

keycloak:
  base-url: ${KEYCLOAK_BASE_URL}
  realm: ${KEYCLOAK_REALM}

firebase:
  credentials:
    path: src/main/resources/firebase-service-account.json

spring:

  datasource:
    url: jdbc:postgresql://localhost:5432/notifs
    username: admin
    password: admin
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID}
      auto-offset-reset: ${KAFKA_CONSUMER_AUTO_OFFSET_RESET}
      key-deserializer: ${KAFKA_CONSUMER_KEY_DESERIALIZER}
      value-deserializer: ${KAFKA_CONSUMER_VALUE_DESERIALIZER}


  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/swagger-ui/oauth2-redirect.html"
            scope: openid, profile, email
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_BASE_URL}/realms/${KEYCLOAK_REALM}
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_BASE_URL}/realms/${KEYCLOAK_REALM}

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

sendgrid:
  api-key: ${SENDGRID_API_KEY}

onesignal:
  app-id: ${ONESIGNAL_APP_ID}
  api-key: ${ONESIGNAL_API_KEY}

springdoc:
  swagger-ui:
    oauth:
      client-id: ${KEYCLOAK_CLIENT_ID}
      use-pkce-with-authorization-code-grant: true


smsto:
  api-key: ${SMS_TO_API_KEY}


notification:
  email:
    default: sendGridEmailService   # smtpEmailService or sendGridEmailService
  push:
    default: fcmPushNotificationService  # fcmPushNotificationService or onesignalPushNotificationService
    mode: TOKEN  #  TOPIC  or TOKEN

  sms:
    default: smstoSmsService  #  smstoSmsService, twilioSmsService
